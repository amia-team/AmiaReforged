// <auto-generated />
using System;
using AmiaReforged.PwEngine.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AmiaReforged.PwEngine.Migrations
{
    [DbContext(typeof(PwEngineContext))]
    [Migration("20251025233225_CreatePlayerHousing")]
    partial class CreatePlayerHousing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.Economy.PersistentCharacterKnowledge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("IndustryTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KnowledgeTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PersistentIndustryMembershipId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("PersistentIndustryMembershipId");

                    b.ToTable("CharacterKnowledge");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.Economy.PersistentIndustryMembership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("IndustryTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("IndustryMemberships");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CdKey")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PersistedCharacter");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PersistentCharacterTrait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomData")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateAcquired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("TraitTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterTraits");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PersistentResourceNodeInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DefinitionTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quality")
                        .HasColumnType("integer");

                    b.Property<float>("Rotation")
                        .HasColumnType("real");

                    b.Property<int>("Uses")
                        .HasColumnType("integer");

                    b.Property<float>("X")
                        .HasColumnType("real");

                    b.Property<float>("Y")
                        .HasColumnType("real");

                    b.Property<float>("Z")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("PersistedNodes");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PlayerHousing.House", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<int>("Settlement")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.WorldConfiguration", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("WorldConfiguration");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Features.WorldEngine.Characters.CharacterData.CharacterStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<int>("IndustriesJoined")
                        .HasColumnType("integer");

                    b.Property<int>("KnowledgePoints")
                        .HasColumnType("integer");

                    b.Property<int>("PlayTime")
                        .HasColumnType("integer");

                    b.Property<int>("TimesDied")
                        .HasColumnType("integer");

                    b.Property<int>("TimesRankedUp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CharacterStatistics", (string)null);
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.Economy.PersistentCharacterKnowledge", b =>
                {
                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.Economy.PersistentIndustryMembership", null)
                        .WithMany("Knowledge")
                        .HasForeignKey("PersistentIndustryMembershipId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.Economy.PersistentIndustryMembership", b =>
                {
                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", "Character")
                        .WithMany("Memberships")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PersistentCharacterTrait", b =>
                {
                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PlayerHousing.House", b =>
                {
                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Features.WorldEngine.Characters.CharacterData.CharacterStatistics", b =>
                {
                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", null)
                        .WithOne("Statistics")
                        .HasForeignKey("AmiaReforged.PwEngine.Features.WorldEngine.Characters.CharacterData.CharacterStatistics", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.Economy.PersistentIndustryMembership", b =>
                {
                    b.Navigation("Knowledge");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.PersistedCharacter", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Statistics");
                });
#pragma warning restore 612, 618
        }
    }
}
