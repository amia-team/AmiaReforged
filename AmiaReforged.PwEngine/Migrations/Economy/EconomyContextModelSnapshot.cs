// <auto-generated />
using System.Collections.Generic;
using AmiaReforged.PwEngine.Database;
using AmiaReforged.PwEngine.Database.Entities.Economy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AmiaReforged.PwEngine.Migrations
{
    [DbContext(typeof(EconomyContext))]
    partial class EconomyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.Economy.ResourceNodeDefinition", b =>
                {
                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<int>("Appearance")
                        .HasColumnType("integer");

                    b.Property<int>("BaseHarvestTime")
                        .HasColumnType("integer");

                    b.Property<int>("BaseQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HarvestAction")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("ScaleVariance")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<List<ResourceNodeDefinition.YieldItem>>("YieldItems")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Tag");

                    b.ToTable("NodeDefinitions");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Database.Entities.SavedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AreaResRef")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<float>("Orientation")
                        .HasColumnType("real");

                    b.Property<float>("X")
                        .HasColumnType("real");

                    b.Property<float>("Y")
                        .HasColumnType("real");

                    b.Property<float>("Z")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("SavedLocations");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Systems.WorldEngine.Definitions.Economy.PersistentResourceNode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ResourceTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Richness")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("ExistingNodes");
                });

            modelBuilder.Entity("AmiaReforged.PwEngine.Systems.WorldEngine.Definitions.Economy.PersistentResourceNode", b =>
                {
                    b.HasOne("AmiaReforged.PwEngine.Database.Entities.SavedLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
