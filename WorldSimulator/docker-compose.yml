version: '3.8'

services:
  worldsimulator:
    build:
      context: ..
      dockerfile: WorldSimulator/Dockerfile
    container_name: worldsimulator
    restart: unless-stopped
    environment:
      - DOTNET_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=${POSTGRES_CONNECTION_STRING}
      - PwEngine__BaseUrl=${PWENGINE_BASE_URL:-http://localhost:8080/api/worldengine/}
      - PwEngine__ApiKey=${PWENGINE_API_KEY}
      - PwEngine__Timeout=${PWENGINE_TIMEOUT:-30}
      - PwEngine__Retry__MaxAttempts=${PWENGINE_RETRY_MAX_ATTEMPTS:-3}
      - PwEngine__CircuitBreaker__FailuresBeforeOpening=${PWENGINE_CB_FAILURES:-5}
      - PwEngine__CircuitBreaker__DurationOfBreakSeconds=${PWENGINE_CB_DURATION:-30}
      # Uncomment to skip DB init in container startup during initial bring-up
      # - WORLD_SIMULATOR_SKIP_DB_INIT=${WORLD_SIMULATOR_SKIP_DB_INIT:-false}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - amia-network

  postgres:
    image: postgres:16-alpine
    container_name: worldsimulator-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-worldsimulator}
      - POSTGRES_USER=${POSTGRES_USER:-worldsim}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - amia-network

networks:
  amia-network:
    driver: bridge

volumes:
  postgres-data:
